<?php

declare(strict_types=1);

namespace Phphleb\WebRotor\Src\Log;

use Phphleb\WebRotor\Src\InternalConfig;
use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;

/**
 * @author Foma Tuturov <fomiash@yandex.ru>
 *
 * @internal
 */
final class LoggerManager
{
    /**
     * @param array<string, null|string> $request
     * @return array{0: string, 1: array<string, string>}
     */
    public static function createStartInfoFromLogger(array $request, string $tag): array
    {
        $message = '(A-1) Start processing an asynchronous request: waiting for a response generated by the worker.';
        return [
            'For worker #' . explode('-', $tag)[0] . ' ' . $message . ' ' . ' {method} {uri}',
            [
                'method' => $request['method'] ?? 'undefined',
                'uri' => $request['uri'] ?? 'undefined'
            ]
        ];
    }

    /**
     * Returns the current initialization data for the web server.
     *
     * @return array{0: string, 1: array<string, mixed>}
     */
    public static function createInitialWorkerInfo(InternalConfig $config): array
    {
        return ['Worker #{id} of {num} started (lifetime {lifetime}s)',
            [
                'id' => $config->getCurrentWorkerId(),
                'num' => $config->getWorkerNum(),
                'lifetime' => $config->getWorkerLifetimeSec()
            ]
        ];
    }

    /**
     * @return array{0:string, 1: array<string, int|string>}
     */
    public static function preparePsr7FromLogger(
        string                 $message,
        ServerRequestInterface $request,
        ?ResponseInterface     $response
    ): array
    {
        return [
            $message . ' request: {method} {uri} response: {status} {phrase}',
            [
                'method' => $request->getMethod(),
                'uri' => (string)$request->getUri(),
                'status' => $response ? $response->getStatusCode() : 500,
                'phrase' => $response ? $response->getReasonPhrase() : 'Fatal Error (The response is not generated)'
            ]
        ];
    }
}
